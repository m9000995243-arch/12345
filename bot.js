const { Telegraf, Markup } = require('telegraf');
const axios = require('axios');
const express = require('express');

const app = express();
const PORT = process.env.PORT || 3000;

// ===== –ù–ê–°–¢–†–û–ô–ö–ò =====
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const HUGGING_FACE_TOKEN = process.env.HUGGING_FACE_TOKEN;
const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID;

const bot = new Telegraf(TELEGRAM_BOT_TOKEN);

// ===== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–†–ï–ù–î–ï =====
const BRAND_INFO = {
  name: "Mortem Vellum",
  description: "–∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π",
  delivery: "–°–î–≠–ö, –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏, Boxberry, Avito –î–æ—Å—Ç–∞–≤–∫–∞ (2-5 –¥–Ω–µ–π)",
  phone: "+7 900 099 52 43",
  production: "—Ä—É—á–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ, —à–µ–ª–∫–æ–≥—Ä–∞—Ñ–∏—è",
  warranty: "7 –¥–Ω–µ–π –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –±—Ä–∞–∫",
  payment: "100% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ –∏–ª–∏ 50% + –Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂",
  returnPolicy: "–≤–æ–∑–≤—Ä–∞—Ç –∑–∞ –Ω–∞—à —Å—á–µ—Ç –ø—Ä–∏ –Ω–∞—à–µ–π –æ—à–∏–±–∫–µ"
};

// –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π
const keyboard = Markup.keyboard([
  ['üë®‚Äçüíº –ü–æ–∑–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞']
]).resize();

// ===== –£–ú–ù–´–ï –û–¢–í–ï–¢–´ –ë–ï–ó –ù–ï–ô–†–û–°–ï–¢–ò =====
function getSmartResponse(question) {
  const lowerQuestion = question.toLowerCase();
  
  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  if (lowerQuestion.includes('–ø—Ä–∏–≤–µ—Ç') || lowerQuestion.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤')) {
    return `–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ –±—Ä–µ–Ω–¥–∞ ${BRAND_INFO.name}. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`;
  }
  
  // –î–æ—Å—Ç–∞–≤–∫–∞
  if (lowerQuestion.includes('–¥–æ—Å—Ç–∞–≤') || lowerQuestion.includes('—Å—Ä–æ–∫') || lowerQuestion.includes('–ø–æ–ª—É—á')) {
    return `üöö ${BRAND_INFO.delivery}\n\n–ú—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.`;
  }
  
  // –û–ø–ª–∞—Ç–∞
  if (lowerQuestion.includes('–æ–ø–ª–∞—Ç') || lowerQuestion.includes('—Ü–µ–Ω–∞') || lowerQuestion.includes('—Å—Ç–æ–∏–º') || lowerQuestion.includes('–∫—É–ø')) {
    return `üí≥ ${BRAND_INFO.payment}\n\n–¶–µ–Ω—ã –æ—Ç 1500 –¥–æ 5000 —Ä—É–±–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–æ–¥–µ–ª–∏ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–Ω—Ç–∞.`;
  }
  
  // –ì–∞—Ä–∞–Ω—Ç–∏—è –∏ –≤–æ–∑–≤—Ä–∞—Ç
  if (lowerQuestion.includes('–≥–∞—Ä–∞–Ω—Ç') || lowerQuestion.includes('–≤–æ–∑–≤—Ä–∞—Ç') || lowerQuestion.includes('–±—Ä–∞–∫')) {
    return `üõ°Ô∏è ${BRAND_INFO.warranty}\n\n${BRAND_INFO.returnPolicy}\n\n–ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –ø—Ä–∏—à–µ–ª —Å –¥–µ—Ñ–µ–∫—Ç–æ–º - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏!`;
  }
  
  // –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
  if (lowerQuestion.includes('–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤') || lowerQuestion.includes('—Å–¥–µ–ª–∞') || lowerQuestion.includes('–∫–∞—á–µ—Å—Ç–≤') || lowerQuestion.includes('–º–∞—Ç–µ—Ä–∏–∞–ª')) {
    return `üé® ${BRAND_INFO.production}\n\n–ö–∞–∂–¥–∞—è –≤–µ—â—å —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é —Å –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.`;
  }
  
  // –ö–æ–Ω—Ç–∞–∫—Ç—ã
  if (lowerQuestion.includes('–∫–æ–Ω—Ç–∞–∫—Ç') || lowerQuestion.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || lowerQuestion.includes('—Å–≤—è–∑–∞—Ç—å—Å—è') || lowerQuestion.includes('–Ω–æ–º–µ—Ä')) {
    return `üìû ${BRAND_INFO.phone}\n\n–ó–≤–æ–Ω–∏—Ç–µ –∏–ª–∏ –ø–∏—à–∏—Ç–µ –≤ WhatsApp/Telegram –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É.`;
  }
  
  // –û –±—Ä–µ–Ω–¥–µ
  if (lowerQuestion.includes('–±—Ä–µ–Ω–¥') || lowerQuestion.includes('–º–∞—Ä–∫–∞') || lowerQuestion.includes('–∫–æ–º–ø–∞–Ω–∏—è') || lowerQuestion.includes('mortem') || lowerQuestion.includes('vellum')) {
    return `üé≠ ${BRAND_INFO.name} - —ç—Ç–æ ${BRAND_INFO.description}.\n\n–ú—ã —Å–æ–∑–¥–∞–µ–º –æ–¥–µ–∂–¥—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∏ –≤—ã—Ä–∞–∂–∞–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å.`;
  }
  
  // –ö–æ–ª–ª–µ–∫—Ü–∏—è/—Ç–æ–≤–∞—Ä—ã
  if (lowerQuestion.includes('–∫–æ–ª–ª–µ–∫—Ü') || lowerQuestion.includes('—Ç–æ–≤–∞—Ä') || lowerQuestion.includes('–æ–¥–µ–∂–¥') || lowerQuestion.includes('—Ñ—É—Ç–±–æ–ª') || lowerQuestion.includes('—Ö—É–¥–∏') || lowerQuestion.includes('—Å–≤–∏—Ç—à–æ—Ç')) {
    return `üëï –£ –Ω–∞—Å –µ—Å—Ç—å —Ö—É–¥–∏, —Ñ—É—Ç–±–æ–ª–∫–∏ –∏ —Å–≤–∏—Ç—à–æ—Ç—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –ø—Ä–∏–Ω—Ç–∞–º–∏.\n\n–ö–∞–∂–¥–∞—è –º–æ–¥–µ–ª—å –≤—ã–ø—É—Å–∫–∞–µ—Ç—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —Ç–∏—Ä–∞–∂–æ–º. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —É—Ç–æ—á–Ω—è–π—Ç–µ —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.`;
  }
  
  // –†–∞–∑–º–µ—Ä—ã
  if (lowerQuestion.includes('—Ä–∞–∑–º–µ—Ä') || lowerQuestion.includes('–º–µ—Ä–∫') || lowerQuestion.includes('s') || lowerQuestion.includes('m') || lowerQuestion.includes('l') || lowerQuestion.includes('xl')) {
    return `üìè –ï—Å—Ç—å —Ä–∞–∑–º–µ—Ä—ã –æ—Ç S –¥–æ XL.\n\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –≤–∞—à–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å - –º–æ–∂–µ–º –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º.`;
  }
  
  // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
  return `–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤–∞—à–µ–º –≤–æ–ø—Ä–æ—Å–µ. –ò–ª–∏ –º–æ–∂–µ—Ç–µ:\n‚Ä¢ –£–∑–Ω–∞—Ç—å –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n‚Ä¢ –£—Ç–æ—á–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã  \n‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º\n‚Ä¢ –ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–≤—è–∑–∏ —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º`;
}

// ===== –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ù–ï–ô–†–û–°–ï–¢–ò (–†–ï–ó–ï–†–í–ù–ê–Ø) =====
async function askAI(question) {
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —É–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    const smartResponse = getSmartResponse(question);
    if (!smartResponse.includes('–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ')) {
      return smartResponse;
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —É–º–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø—Ä–æ–±—É–µ–º –Ω–µ–π—Ä–æ—Å–µ—Ç—å
    if (!HUGGING_FACE_TOKEN) {
      return "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —è –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –¥–æ—Å—Ç–∞–≤–∫–µ, –æ–ø–ª–∞—Ç–µ, —Ä–∞–∑–º–µ—Ä–∞—Ö –∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏. –î–ª—è –¥—Ä—É–≥–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ '–ü–æ–∑–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'.";
    }
    
    const API_URL = "https://api-inference.huggingface.co/models/microsoft/DialoGPT-medium";
    const headers = { 
      "Authorization": `Bearer ${HUGGING_FACE_TOKEN}` 
    };

    const context = `–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –±—Ä–µ–Ω–¥–∞ –æ–¥–µ–∂–¥—ã. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.
    
–í–æ–ø—Ä–æ—Å: ${question}
–û—Ç–≤–µ—Ç:`;
    
    const payload = {
      "inputs": context,
      "parameters": {
        "max_length": 150,
        "temperature": 0.7
      }
    };
    
    const response = await axios.post(API_URL, payload, { headers, timeout: 10000 });
    
    if (response.status === 200 && response.data && response.data[0]?.generated_text) {
      return response.data[0].generated_text.slice(0, 300);
    }
    
    return getSmartResponse(question);
    
  } catch (error) {
    console.log('–û—à–∏–±–∫–∞ AI, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:', error.message);
    return getSmartResponse(question);
  }
}

// ===== –•–†–ê–ù–ò–õ–ò–©–ï –ò–°–¢–û–†–ò–ò –ß–ê–¢–û–í =====
const userHistory = new Map();

// ===== –ö–û–ú–ê–ù–î–ê /start =====
bot.start((ctx) => {
  const userId = ctx.from.id;
  userHistory.set(userId, []);
  
  ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ –±—Ä–µ–Ω–¥–∞ ${BRAND_INFO.name}. üé≠\n\n–ú–æ–≥—É –ø–æ–º–æ—á—å —Å:\n‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–æ–π –∏ —Å—Ä–æ–∫–∞–º–∏\n‚Ä¢ –û–ø–ª–∞—Ç–æ–π –∏ —Ü–µ–Ω–∞–º–∏\n‚Ä¢ –†–∞–∑–º–µ—Ä–∞–º–∏ –∏ –≤—ã–±–æ—Ä–æ–º\n‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏–µ–π –∏ –≤–æ–∑–≤—Ä–∞—Ç–æ–º\n\n–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–≤—è–∑–∏ —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º üëá`,
    keyboard
  );
});

// ===== –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô =====
bot.on('text', async (ctx) => {
  const userText = ctx.message.text;
  const userId = ctx.from.id;
  const userName = ctx.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–ü–æ–∑–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"
  if (userText === 'üë®‚Äçüíº –ü–æ–∑–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞') {
    const history = userHistory.get(userId) || [];
    
    let historyText = "–ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞";
    if (history.length > 0) {
      historyText = history.slice(-3).map((chat, index) => 
        `üí¨ ${index + 1}. –í: ${chat.question}\nüí° –û: ${chat.answer}`
      ).join('\n\n');
    }
    
    const adminMessage = 
`üîî –°–û–¢–†–£–î–ù–ò–ö–ê –ó–û–í–£–¢!

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userName}
üÜî ID: ${userId}

üìã –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞:
${historyText}

‚úâÔ∏è –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${userText}"`;

    try {
      await bot.telegram.sendMessage(ADMIN_CHAT_ID, adminMessage);
      await ctx.reply('‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–∂–µ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏! –û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.', keyboard);
      userHistory.set(userId, []);
    } catch (error) {
      await ctx.reply('üìû –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º: ' + BRAND_INFO.phone, keyboard);
    }
    return;
  }

  try {
    const aiResponse = await askAI(userText);
    
    if (!userHistory.has(userId)) {
      userHistory.set(userId, []);
    }
    
    const history = userHistory.get(userId);
    history.push({
      question: userText,
      answer: aiResponse
    });
    
    if (history.length > 5) {
      history.shift();
    }
    
    await ctx.reply(aiResponse, keyboard);
  } catch (error) {
    await ctx.reply('üìû –î–ª—è —Å–≤—è–∑–∏ —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É: ' + BRAND_INFO.phone, keyboard);
  }
});

// ===== –ó–ê–ü–£–°–ö –ë–û–¢–ê =====
bot.launch().then(() => {
  console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
}).catch((error) => {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error.message);
});

// ===== EXPRESS –°–ï–†–í–ï–† =====
app.get('/', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
        <title>Mortem Vellum Support Bot</title>
        <style>
            body { 
                font-family: Arial, sans-serif; 
                text-align: center; 
                padding: 50px; 
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
            }
            .container {
                background: rgba(255,255,255,0.1);
                padding: 30px;
                border-radius: 15px;
                backdrop-filter: blur(10px);
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>‚úÖ Mortem Vellum Support Bot</h1>
            <p>ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ</p>
            <p>üé≠ –ö–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π</p>
        </div>
    </body>
    </html>
  `);
});

app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
