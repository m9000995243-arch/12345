const { Telegraf, Markup } = require('telegraf');
const express = require('express');

const app = express();
const PORT = process.env.PORT || 3000;

// ===== –ù–ê–°–¢–†–û–ô–ö–ò =====
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID;

console.log('üîÑ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
if (!TELEGRAM_BOT_TOKEN) {
    console.log('‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(1);
}

if (!ADMIN_CHAT_ID) {
    console.log('‚ùå –û–®–ò–ë–ö–ê: ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(1);
}

const bot = new Telegraf(TELEGRAM_BOT_TOKEN);

// ===== –ü–†–û–°–¢–û–ï –•–†–ê–ù–ò–õ–ò–©–ï =====
let waitingClients = [];

// ===== –ö–õ–ê–í–ò–ê–¢–£–†–´ =====
const userKeyboard = Markup.keyboard([
    ['üöö –î–æ—Å—Ç–∞–≤–∫–∞', 'üîÑ –í–æ–∑–≤—Ä–∞—Ç'],
    ['üì¶ –ö–∞—Ç–∞–ª–æ–≥', 'üè¢ –û –±—Ä–µ–Ω–¥–µ'],
    ['üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å']
]).resize();

const adminKeyboard = Markup.keyboard([
    ['üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤'],
    ['üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É'], 
    ['‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥']
]).resize();

// ===== –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô =====
bot.start((ctx) => {
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω /start');
    ctx.reply("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", userKeyboard);
});

bot.hears('üöö –î–æ—Å—Ç–∞–≤–∫–∞', (ctx) => {
    ctx.reply("üöö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ...", userKeyboard);
});

bot.hears('üîÑ –í–æ–∑–≤—Ä–∞—Ç', (ctx) => {
    ctx.reply("üîÑ –£—Å–ª–æ–≤–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞...", userKeyboard);
});

bot.hears('üì¶ –ö–∞—Ç–∞–ª–æ–≥', (ctx) => {
    ctx.reply("üì¶ –ù–∞—à –∫–∞—Ç–∞–ª–æ–≥...", userKeyboard);
});

bot.hears('üè¢ –û –±—Ä–µ–Ω–¥–µ', (ctx) => {
    ctx.reply("üè¢ –û –Ω–∞—à–µ–º –±—Ä–µ–Ω–¥–µ...", userKeyboard);
});

bot.hears('üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', async (ctx) => {
    const user = {
        id: ctx.from.id,
        name: ctx.from.first_name || '–ö–ª–∏–µ–Ω—Ç'
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–Ω–∏—è
    if (!waitingClients.find(c => c.id === user.id)) {
        waitingClients.push(user);
    }

    console.log('üì® –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç:', user.name);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
    const adminMsg = `üîî –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç: ${user.name} (ID: ${user.id})`;
    await bot.telegram.sendMessage(ADMIN_CHAT_ID, adminMsg, adminKeyboard);
    
    ctx.reply("‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.", userKeyboard);
});

// ===== –î–õ–Ø –ê–î–ú–ò–ù–ê =====
let currentDialog = null;

bot.command('admin', (ctx) => {
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) return;
    
    let message = `üë®‚Äçüíº –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n`;
    message += `‚è≥ –ö–ª–∏–µ–Ω—Ç–æ–≤: ${waitingClients.length}\n`;
    
    if (currentDialog) {
        message += `üí¨ –í –¥–∏–∞–ª–æ–≥–µ —Å: ${currentDialog.name}\n`;
    }
    
    ctx.reply(message, adminKeyboard);
});

// –ö–Ω–æ–ø–∫–∞ "–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤"
bot.hears('üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤', (ctx) => {
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) return;
    
    if (waitingClients.length === 0) {
        ctx.reply("üì≠ –ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤", adminKeyboard);
        return;
    }
    
    let message = "üìã –ö–ª–∏–µ–Ω—Ç—ã:\n";
    waitingClients.forEach((client, index) => {
        message += `${index + 1}. ${client.name} (ID: ${client.id})\n`;
    });
    
    ctx.reply(message, adminKeyboard);
});

// –ö–Ω–æ–ø–∫–∞ "–û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É" 
bot.hears('üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É', async (ctx) => {
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) return;
    
    if (waitingClients.length === 0) {
        ctx.reply("üì≠ –ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤", adminKeyboard);
        return;
    }
    
    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
    const client = waitingClients[0];
    currentDialog = client;
    
    // –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –æ–∂–∏–¥–∞–Ω–∏—è
    waitingClients = waitingClients.filter(c => c.id !== client.id);
    
    await ctx.reply(`üí¨ –î–∏–∞–ª–æ–≥ —Å ${client.name}\n–¢–µ–ø–µ—Ä—å –≤—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∫–ª–∏–µ–Ω—Ç—É.`, adminKeyboard);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    await bot.telegram.sendMessage(client.id, "üë®‚Äçüíº –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–∞ —Å–≤—è–∑–∏! –ú–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã.", userKeyboard);
});

// –ö–Ω–æ–ø–∫–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥"
bot.hears('‚ùå –ó–∞–ø–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥', async (ctx) => {
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) return;
    
    if (!currentDialog) {
        ctx.reply("‚ùå –ù–µ –≤ –¥–∏–∞–ª–æ–≥–µ", adminKeyboard);
        return;
    }
    
    const clientName = currentDialog.name;
    currentDialog = null;
    
    ctx.reply(`‚úÖ –î–∏–∞–ª–æ–≥ —Å ${clientName} –∑–∞–≤–µ—Ä—à–µ–Ω`, adminKeyboard);
});

// –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∞–¥–º–∏–Ω—É
bot.on('text', async (ctx) => {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
    if (ctx.from.id.toString() === ADMIN_CHAT_ID) {
        // –ï—Å–ª–∏ –∞–¥–º–∏–Ω –ø–∏—à–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É
        if (currentDialog && !['üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤', 'üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É', '‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥'].includes(ctx.message.text)) {
            try {
                await bot.telegram.sendMessage(currentDialog.id, `üë®‚Äçüíº –°–æ—Ç—Ä—É–¥–Ω–∏–∫: ${ctx.message.text}`, userKeyboard);
                ctx.reply("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
            } catch (error) {
                ctx.reply("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏");
                currentDialog = null;
            }
        }
        return;
    }
    
    // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∞–¥–º–∏–Ω—É
    const userText = ctx.message.text;
    if (!['üöö –î–æ—Å—Ç–∞–≤–∫–∞', 'üîÑ –í–æ–∑–≤—Ä–∞—Ç', 'üì¶ –ö–∞—Ç–∞–ª–æ–≥', 'üè¢ –û –±—Ä–µ–Ω–¥–µ', 'üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'].includes(userText)) {
        const userName = ctx.from.first_name || '–ö–ª–∏–µ–Ω—Ç';
        await bot.telegram.sendMessage(ADMIN_CHAT_ID, `üì® ${userName}: ${userText}`, adminKeyboard);
    }
});

// ===== –ó–ê–ü–£–°–ö =====
bot.launch().then(() => {
    console.log('ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
}).catch((error) => {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error.message);
    process.exit(1);
});

// Express —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
app.get('/', (req, res) => {
    res.send('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!');
});

app.listen(PORT, () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

console.log('‚úÖ –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...');
