const { Telegraf, Markup } = require('telegraf');
const express = require('express');

const app = express();
const PORT = process.env.PORT || 3000;

console.log('=== üöÄ –ù–ê–ß–ê–õ–û –ó–ê–ü–£–°–ö–ê ===');

// ===== –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• =====
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID;

console.log('üîß TELEGRAM_BOT_TOKEN:', TELEGRAM_BOT_TOKEN ? '–ï–°–¢–¨' : '–ù–ï–¢!');
console.log('üîß ADMIN_CHAT_ID:', ADMIN_CHAT_ID ? '–ï–°–¢–¨' : '–ù–ï–¢!');

if (!TELEGRAM_BOT_TOKEN) {
    console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    console.log('üí° –î–æ–±–∞–≤—å –≤ Environment Variables:');
    console.log('   TELEGRAM_BOT_TOKEN = —Ç–≤–æ–π_—Ç–æ–∫–µ–Ω_–æ—Ç_BotFather');
    process.exit(1);
}

if (!ADMIN_CHAT_ID) {
    console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    console.log('üí° –î–æ–±–∞–≤—å –≤ Environment Variables:');
    console.log('   ADMIN_CHAT_ID = —Ç–≤–æ–π_id_–∏–∑_@userinfobot');
    process.exit(1);
}

console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã');

// ===== –°–û–ó–î–ê–ù–ò–ï –ë–û–¢–ê =====
try {
    console.log('ü§ñ –°–æ–∑–¥–∞—é –±–æ—Ç–∞...');
    const bot = new Telegraf(TELEGRAM_BOT_TOKEN);
    console.log('‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω');
} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞:', error.message);
    process.exit(1);
}

const bot = new Telegraf(TELEGRAM_BOT_TOKEN);

// ===== –ü–†–û–°–¢–û–ï –•–†–ê–ù–ò–õ–ò–©–ï =====
let waitingClients = [];
let currentDialog = null;

console.log('‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');

// ===== –ö–õ–ê–í–ò–ê–¢–£–†–´ =====
const userKeyboard = Markup.keyboard([
    ['üöö –î–æ—Å—Ç–∞–≤–∫–∞', 'üîÑ –í–æ–∑–≤—Ä–∞—Ç'],
    ['üì¶ –ö–∞—Ç–∞–ª–æ–≥', 'üè¢ –û –±—Ä–µ–Ω–¥–µ'],
    ['üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å']
]).resize();

const adminKeyboard = Markup.keyboard([
    ['üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤'],
    ['üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É'],
    ['‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥']
]).resize();

console.log('‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ–∑–¥–∞–Ω—ã');

// ===== –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô =====
bot.start((ctx) => {
    console.log('üéØ –ü–æ–ª—É—á–µ–Ω /start –æ—Ç:', ctx.from.id);
    ctx.reply("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", userKeyboard);
});

bot.hears('üöö –î–æ—Å—Ç–∞–≤–∫–∞', (ctx) => {
    ctx.reply("üöö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ...", userKeyboard);
});

bot.hears('üîÑ –í–æ–∑–≤—Ä–∞—Ç', (ctx) => {
    ctx.reply("üîÑ –£—Å–ª–æ–≤–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞...", userKeyboard);
});

bot.hears('üì¶ –ö–∞—Ç–∞–ª–æ–≥', (ctx) => {
    ctx.reply("üì¶ –ù–∞—à –∫–∞—Ç–∞–ª–æ–≥...", userKeyboard);
});

bot.hears('üè¢ –û –±—Ä–µ–Ω–¥–µ', (ctx) => {
    ctx.reply("üè¢ –û –Ω–∞—à–µ–º –±—Ä–µ–Ω–¥–µ...", userKeyboard);
});

bot.hears('üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', async (ctx) => {
    const user = {
        id: ctx.from.id,
        name: ctx.from.first_name || '–ö–ª–∏–µ–Ω—Ç'
    };

    if (!waitingClients.find(c => c.id === user.id)) {
        waitingClients.push(user);
    }

    console.log('üì® –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç:', user.name);
    
    try {
        await bot.telegram.sendMessage(ADMIN_CHAT_ID, `üîî –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç: ${user.name}`, adminKeyboard);
        ctx.reply("‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.", userKeyboard);
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É:', error.message);
        ctx.reply("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.", userKeyboard);
    }
});

// ===== –î–õ–Ø –ê–î–ú–ò–ù–ê =====
bot.command('admin', (ctx) => {
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) return;
    
    let message = `üë®‚Äçüíº –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n‚è≥ –ö–ª–∏–µ–Ω—Ç–æ–≤: ${waitingClients.length}`;
    if (currentDialog) message += `\nüí¨ –í –¥–∏–∞–ª–æ–≥–µ —Å: ${currentDialog.name}`;
    
    ctx.reply(message, adminKeyboard);
});

bot.hears('üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤', (ctx) => {
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) return;
    
    if (waitingClients.length === 0) {
        ctx.reply("üì≠ –ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤", adminKeyboard);
        return;
    }
    
    let message = "üìã –ö–ª–∏–µ–Ω—Ç—ã:\n";
    waitingClients.forEach((client, index) => {
        message += `${index + 1}. ${client.name}\n`;
    });
    
    ctx.reply(message, adminKeyboard);
});

bot.hears('üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É', async (ctx) => {
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) return;
    
    if (waitingClients.length === 0) {
        ctx.reply("üì≠ –ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤", adminKeyboard);
        return;
    }
    
    const client = waitingClients[0];
    currentDialog = client;
    waitingClients = waitingClients.filter(c => c.id !== client.id);
    
    await ctx.reply(`üí¨ –î–∏–∞–ª–æ–≥ —Å ${client.name}`, adminKeyboard);
    
    try {
        await bot.telegram.sendMessage(client.id, "üë®‚Äçüíº –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–∞ —Å–≤—è–∑–∏!", userKeyboard);
    } catch (error) {
        ctx.reply("‚ùå –ö–ª–∏–µ–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞");
        currentDialog = null;
    }
});

bot.hears('‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥', (ctx) => {
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) return;
    
    if (!currentDialog) {
        ctx.reply("‚ùå –ù–µ –≤ –¥–∏–∞–ª–æ–≥–µ", adminKeyboard);
        return;
    }
    
    ctx.reply(`‚úÖ –î–∏–∞–ª–æ–≥ —Å ${currentDialog.name} –∑–∞–≤–µ—Ä—à–µ–Ω`, adminKeyboard);
    currentDialog = null;
});

// –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
    // –ê–¥–º–∏–Ω –ø–∏—à–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
    if (ctx.from.id.toString() === ADMIN_CHAT_ID && currentDialog) {
        const text = ctx.message.text;
        if (!['üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤', 'üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É', '‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥'].includes(text)) {
            try {
                await bot.telegram.sendMessage(currentDialog.id, `üë®‚Äçüíº ${text}`, userKeyboard);
                ctx.reply("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
            } catch (error) {
                ctx.reply("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏");
                currentDialog = null;
            }
        }
        return;
    }
    
    // –ö–ª–∏–µ–Ω—Ç –ø–∏—à–µ—Ç –∞–¥–º–∏–Ω—É
    if (ctx.from.id.toString() !== ADMIN_CHAT_ID) {
        const text = ctx.message.text;
        if (!['üöö –î–æ—Å—Ç–∞–≤–∫–∞', 'üîÑ –í–æ–∑–≤—Ä–∞—Ç', 'üì¶ –ö–∞—Ç–∞–ª–æ–≥', 'üè¢ –û –±—Ä–µ–Ω–¥–µ', 'üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'].includes(text)) {
            try {
                await bot.telegram.sendMessage(ADMIN_CHAT_ID, `üì® ${ctx.from.first_name}: ${text}`, adminKeyboard);
            } catch (error) {
                console.log('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏:', error.message);
            }
        }
    }
});

// ===== –ó–ê–ü–£–°–ö –ë–û–¢–ê =====
console.log('üöÄ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...');

bot.launch().then(() => {
    console.log('üéâ ü§ñ –ë–û–¢ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù!');
    console.log('üëâ –¢–µ—Å—Ç–∏—Ä—É–π –≤ Telegram');
}).catch((error) => {
    console.log('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ó–ê–ü–£–°–ö–ê:');
    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    console.log('–°—Ç–µ–∫:', error.stack);
    process.exit(1);
});

// ===== EXPRESS –°–ï–†–í–ï–† =====
app.get('/', (req, res) => {
    res.send('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!');
});

app.listen(PORT, () => {
    console.log(`üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

console.log('‚úÖ –í—Å—ë –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –∂–¥—ë–º –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞...');
